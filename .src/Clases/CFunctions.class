' Gambas class file

'
' Authors:
'  J. Francisco Facundo <sos.sempai@gmail.com>
'
' This program is free software; you can redistribute it and/or modify it under
' the terms of the GNU General Public License as published by the Free Software
' Foundation; version 3.
'
' This program is distributed in the hope that it will be useful, but WITHOUT
' ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
' FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
' details.
'
' You should have received a copy of the GNU General Public License along with
' this program; if not, write to the Free Software Foundation, Inc.,
' 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

Private DataControl As New CData
Private $CMain As CMMain
Private NumberPos As Integer
Property Skm_Modo As String ''Establece o retorna el modo seleccionado.
Property Volumen As Integer ''Establece o retorna el valor de volumen.

Public Sub _new()
  
  Dim SkinTheme As Settings
  DataControl.Skm_Modo = "Musica"
  SkinTheme = New Settings(DataControl.SkinPath & DataControl.SkinTheme &/ "theme.conf")
  NumberPos = 1
  
  $CMain = New CMMain(FMain) As "CMain"
  
  With $CMain
    .H = SkinTheme["Window/H"]
    .W = SkinTheme["Window/W"]
    .X = 0
    .Y = 0
    .Skm_Modo = DataControl.Skm_Modo
    .NumberPos = NumberPos
  End With
  
  
End

Private Sub SetVolMaster(PercentVol As Integer)
  
  If PercentVol < 0 Or PercentVol > 100 Then Return
  
  'Modo Raspberry Pi se utiliza amixer en lugar de pulseaudio
  If Application.Args[1] = "-pimode" Then
    Shell "amixer -q set PCM " & PercentVol & "%"
  Else
    'Script para pulseaudio
    Shell "pavol percent " & PercentVol & "%"
  Endif
  
  DataControl.MasterVol = PercentVol
  Debug PercentVol
  
End

Private Function Volumen_Read() As Integer

  Return DataControl.MasterVol

End

Private Sub Volumen_Write(Value As Integer)

  SetVolMaster(Value)

End

Public Sub ReloadList()
  
  NumberPos = 1
  $CMain.NumberPos = NumberPos
  
End

Public Sub FwList()
  
  'Avanza la lista +10 pasos
  If NumberPos + 10 < DataControl.getTotalAlbums() Then
    NumberPos = NumberPos + 10
  Else
    NumberPos = 1
  Endif
  $CMain.NumberPos = NumberPos
  
End

Public Sub BkList()
  
  'Retrocede la lista -10 pasos
  If NumberPos - 10 < DataControl.getTotalAlbums() And NumberPos - 10 > 0 Then
    NumberPos = NumberPos - 10
  Else If NumberPos - 10 > -9
    NumberPos = 1
  Else
    NumberPos = CInt(Left(Str(DataControl.getTotalAlbums()), -1) & "0")
  Endif
  $CMain.NumberPos = NumberPos
  
End

Public Sub CancelSong()
  
  $CMain.CancelSong
  
End

Private Function Skm_Modo_Read() As String

  Return DataControl.Skm_Modo

End

Private Sub Skm_Modo_Write(Value As String)

  DataControl.Skm_Modo = Value
  $CMain.Skm_Modo = Value
  ReloadList

End

Public Sub CMain_ForwardKey()
  
  FwList
  
End

Public Sub CMain_BackwardKey()
  
  BkList
  
End

Public Sub PanelSearchKey()
  
  $CMain.PanelSearchRaise
  
End

Public Sub IncMaxCredito()
  
  Dim i As Integer
  i = DataControl.Credito + DataControl.CreditValue
  DataControl.Credito = i
  DataControl.Total_credito = DataControl.Total_credito + 1
  $CMain.SetLblCredito(i)
  
End

Public Sub IncCredito()

  Dim i As Integer
  i = DataControl.Credito + 1
  DataControl.Credito = i
  $CMain.SetLblCredito(i)
  
End

Public Sub DecCredito()
  
  Dim i As Integer
  i = DataControl.Credito - 1
  DataControl.Credito = i
  $CMain.SetLblCredito(i)
  
End

Public Sub ResetCredito()
  
  DataControl.Credito = 0
  $CMain.SetLblCredito(0)
  
End