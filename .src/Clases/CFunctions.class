' Gambas class file

'
' Authors:
'  J. Francisco Facundo <sos.sempai@gmail.com>
'
' This program is free software; you can redistribute it and/or modify it under
' the terms of the GNU General Public License as published by the Free Software
' Foundation; version 3.
'
' This program is distributed in the hope that it will be useful, but WITHOUT
' ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
' FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
' details.
'
' You should have received a copy of the GNU General Public License along with
' this program; if not, write to the Free Software Foundation, Inc.,
' 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

Private DataControl As New CData
Private $CMain As CMMain
Private $NumberPos As New Integer[10]
Private $hResult As Result
Private PageView As Integer ''Contador de pagina
Private rslCont As Integer ''Contador de posicion
Property Skm_Modo As String ''Establece o retorna el modo seleccionado.
Property Volumen As Integer ''Establece o retorna el valor de volumen.

Public Sub _new()
  
  Dim SkinTheme As Settings
  DataControl.Skm_Modo = "Musica"
  SkinTheme = New Settings(DataControl.SkinPath & DataControl.SkinTheme &/ "theme.conf")
  ' NumberPos = 1
  
  $CMain = New CMMain(FMain) As "CMain"
  
  With $CMain
    .H = SkinTheme["Window/H"]
    .W = SkinTheme["Window/W"]
    .X = 0
    .Y = 0
    .Skm_Modo = DataControl.Skm_Modo
    ' .NumberPos = NumberPos
  End With
  
  ReloadList
  
  
End

Private Sub SetVolMaster(PercentVol As Integer)
  
  If PercentVol < 0 Or PercentVol > 100 Then Return
  
  'Modo Raspberry Pi se utiliza amixer en lugar de pulseaudio
  If Application.Args[1] = "-pimode" Then
    Shell "amixer -q set PCM " & PercentVol & "%"
  Else
    'Script para pulseaudio
    Shell "pavol percent " & PercentVol & "%"
  Endif
  
  DataControl.MasterVol = PercentVol
  Debug PercentVol
  
End

Private Function Volumen_Read() As Integer

  Return DataControl.MasterVol

End

Private Sub Volumen_Write(Value As Integer)

  SetVolMaster(Value)

End

Public Sub ReloadList()
  
  Dim i As Byte

  $NumberPos.Clear
  'Cargar el Result de la opcion actual para almacenarlo y usarlo despues
  'Para navegar hacia delante y atras
  $hResult = DataControl.getAllIDInfo($CMain.$Genre)
  
  For i = 0 To 9
    
    If $hResult.Length <= i Then Break
    
    $NumberPos.Add($hResult["id"])
    $hResult.MoveNext
    
  Next
  
  rslCont = 1
  PageView = 1
  
  $CMain.NumberPos = $NumberPos
  $CMain.PageNum = PageView
  
End

Public Sub FwList()
  
  Dim i As Byte
  'Avanza la lista +10 pasos
  $NumberPos.Clear
  
  If rslCont + 10 <= $hResult.Length Then
    rslCont = CInt(Left(Str(rslCont + 10), -1) & "1")
    Inc PageView
    $hResult.MoveTo(rslCont - 1)
  Else
    rslCont = 1
    PageView = 1
    $hResult.MoveFirst
  Endif
  
  For i = 0 To 9
    If $hResult.Index = -1 Then Break
    $NumberPos.Add($hResult["id"])
    $hResult.MoveNext
  Next
  
  $CMain.NumberPos = $NumberPos
  $CMain.PageNum = PageView
  
End

Public Sub BkList()
  
  Dim i As Byte, TotalAlbums As Integer
  'Retrocede la lista -10 pasos
  $NumberPos.Clear
  TotalAlbums = DataControl.getTotalAlbums($CMain.$Genre) - 1
  
  If rslCont - 10 < TotalAlbums And rslCont - 10 > 0 Then
    rslCont = CInt(Left(Str(rslCont - 10), -1) & "0")
    Dec PageView
    $hResult.MoveTo(rslCont)
  Else If rslCont - 10 > -9
    rslCont = 1
    PageView = 1
    $hResult.MoveFirst
  Else
    rslCont = CInt(Left(Str(TotalAlbums), -1) & "0")
    
    If rslCont = 0 Then Return
    
    If $hResult.Max > rslCont - 1 Then
      PageView = (CInt(TotalAlbums / 10) + 1)
      $hResult.MoveTo(rslCont)
    Else
      PageView = 1
      $hResult.MoveFirst
    Endif
    
  Endif
  
  For i = 0 To 9
    If $hResult.Index = -1 Then Break
    $NumberPos.Add($hResult["id"])
    $hResult.MoveNext
  Next
  
  $CMain.NumberPos = $NumberPos
  $CMain.PageNum = PageView
  
End

Public Sub CMain_NavJump(Value As String)
  
  Dim i, c, d As Integer
  
  If Value = "#" Then
    
    If $hResult.Length > 0 Then
      
      ReloadList
      
    Endif
    
  Else
    
    i = DataControl.getIDJump($CMain.$Genre, Value)
    $hResult.MoveFirst
    If i > 0 Then
      $NumberPos.Clear
      If $CMain.$Genre = "*" Then
        rslCont = CInt(Left(Str(i), -1) & "1")
      Else
        For c = 1 To $hResult.Length
          Inc d
          If $hResult["id"] = i Then Break
          $hResult.MoveNext
        Next
        rslCont = CInt(Left(Str(d), -1) & "1")
      Endif
      
      If Len(Str(rslCont)) > 1 Then
        PageView = CInt(Left(Str(rslCont), -1)) + 1
      Else
        PageView = 1
      Endif
      $hResult.MoveTo(rslCont - 1)
      
      For i = 0 To 9
        If $hResult.Index = -1 Then Break
        $NumberPos.Add($hResult["id"])
        $hResult.MoveNext
      Next
      
      $CMain.NumberPos = $NumberPos
      $CMain.PageNum = PageView
      
    Endif
    
  Endif
  
End

Public Sub CancelSong()
  
  $CMain.CancelSong
  
End

Private Function Skm_Modo_Read() As String

  Return DataControl.Skm_Modo

End

Private Sub Skm_Modo_Write(Value As String)

  DataControl.Skm_Modo = Value
  $CMain.Skm_Modo = Value
  ReloadList

End

Public Sub CMain_ForwardKey()
  
  FwList
  
End

Public Sub CMain_BackwardKey()
  
  BkList
  
End

Public Sub CMain_VolMinus()
  
  SetVolMaster(DataControl.MasterVol - 5)
  
End

Public Sub CMain_VolPlus()
  
  SetVolMaster(DataControl.MasterVol + 5)
  
End

Public Sub CMain_ReloadAlbums()
  
  ReloadList
  
End

Public Sub PanelSearchKey()
  
  $CMain.PanelSearchRaise
  
End

Public Sub IncMaxCredito()
  
  Dim i As Integer
  i = DataControl.Credito + DataControl.CreditValue
  DataControl.Credito = i
  DataControl.Total_credito = DataControl.Total_credito + 1
  $CMain.SetLblCredito(i)
  
End

Public Sub IncCredito()

  Dim i As Integer
  i = DataControl.Credito + 1
  DataControl.Credito = i
  $CMain.SetLblCredito(i)
  
End

Public Sub DecCredito(Value As Integer)
  
  Dim i As Integer
  i = DataControl.Credito - Value
  DataControl.Credito = i
  $CMain.SetLblCredito(i)
  
End

Public Sub ResetCredito()
  
  DataControl.Credito = 0
  $CMain.SetLblCredito(0)
  
End
