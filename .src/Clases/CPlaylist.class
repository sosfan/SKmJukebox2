' Gambas class file

' Manejador de cola de reproducción Playlist.class
' Autor:
'   José Francisco Facundo <sos.sempai@gmail.com>
' Licencia:
'   This program Is Free software; you can redistribute it And / Or modify it under
'   the terms Of the GNU General Public License As Published by the Free Software
'   Foundation; version 3.
' 
'  This program Is Distributed In the hope that it will be useful, but WITHOUT
'  ANY WARRANTY; without even the implied warranty Of MERCHANTABILITY Or FITNESS
'  For A PARTICULAR PURPOSE.See the GNU General Public License For more
'   details.
' 
'  You should have received a Copy Of the GNU General Public License along With
'  this program; If Not, Write To the Free Software Foundation, Inc.,
'  51 Franklin Street, Fifth Floor, Boston, MA 02110 - 1301 USA

Private MatrizLed As PanelLed
Private DataControl As New CData
Private $bState As Boolean ''Estado del la reproducción
Private UploadState As Boolean ''Estado de la carga de archivo
Private PlayListSongs As Integer
Private mPlayer As CPlayer
Private hSkinPath As String
Private hSkinTheme As Settings
Private ResMovieBox As Timer
Private iCont As Short
Private UploadSong As String
Private UploadTimer As Timer
Private AutoPlay As Timer
Private TimeCont As Integer
Private SongPlaying As String
Private upFailed As Boolean
Private SearchBoxShow As Boolean
Property MatrizShow As Boolean
Private hProcess As Process
Private procStatus As Boolean
Private VideoRes As String = "480"

 
Public Sub _new()

  Dim MessageText As String
  
  hSkinPath = DataControl.SkinPath & DataControl.SkinTheme
  hSkinTheme = New Settings(hSkinPath &/ "theme.conf")
  
  MatrizLed = New PanelLed(FMain)
  
  With MatrizLed
    .X = hSkinTheme["ScrollText/X"]
    .Y = hSkinTheme["ScrollText/Y"]
    .H = hSkinTheme["ScrollText/H"]
    .W = hSkinTheme["ScrollText/W"]
    .LedSpeed = 40
  End With
  
  ResMovieBox = New Timer As "ResMovieBox"
  ResMovieBox.Delay = 1000
  
  UploadTimer = New Timer As "UploadTimer"
  UploadTimer.Delay = 10000
  
  AutoPlay = New Timer As "AutoPlay"
  AutoPlay.Delay = 60000
  AutoPlay.Start

  MessageText = "Bienvenidos a su lugar preferido"
  addMatrizLed(MessageText)
  mPlayer = New CPlayer As "mPlayer"
  $bState = False
  upFailed = False
  PlayListSongs = DataControl.getAllPlaylist()
  If PlayListSongs > 0 Then
    Wait 3
    mPlayer_ProcessEnd
    $bState = True
  Endif
  
End

Private Sub StopMatrizLed()
  
  If DataControl.VideoOut = True Then MatrizLed.Stop
  
End

Public Function AddPlay(sSong As Song)
  
  If PlayListSongs = 0 And $bState = False And UploadState = False Then
    If sSong.type = "vonline" Then
      While procStatus = True
        Wait 1
      Wend
      procStatus = True
      hProcess = Exec ["youtube-dl", "-o", "/tmp/" & sSong.ID_video & ".mp4", "-f", "best[height<=?" & VideoRes & "]", "--no-check-certificate", "http://www.youtube.com/watch?v=" & sSong.ID_video] For Read As "hProcess"
      While procStatus = True
        Wait 1
      Wend
      StopMatrizLed
      If DataControl.VideoOut = True Then UploadState = True
      mPlayer.Play(sSong.ID_video & ".mp4", "/tmp", "Video", True, "0")
      addMatrizLed("** Ahora sonando - " & Left$(sSong.name, -4) & "  **")
      SongPlaying = sSong.name
      $bState = True
    Else
      StopMatrizLed
      DataControl.Skm_Modo = sSong.type
      If DataControl.VideoOut = True Then UploadState = True
      mPlayer.Play(sSong.name, DataControl.getWorkDir() &/ sSong.genre &/ sSong.album, DataControl.Skm_Modo, True, sSong.cover)
      addMatrizLed("** Ahora sonando - " & Left$(sSong.name, -4) & " - " & sSong.album & " **")
      SongPlaying = sSong.name
      $bState = True
    Endif
  Else
    Inc PlayListSongs
    Debug
    DataControl.DBPlayList = sSong
    If PlayListSongs = 1 And DataControl.VideoOut Then UploadTimer.Start
  Endif
  AutoPlay.Stop
  
End

Public Sub hProcess_Read()
  
  Dim sBuffer As String

  sBuffer = Read #Last, Lof(Last)
  Print sBuffer
  
End

Public Sub hProcess_Kill()
  
  Debug
  procStatus = False
  
End

Public Sub hProcess_Error(Value As String)
  
  Debug Value
  procStatus = False
  
End

Public Sub mPlayer_ProcessEnd()
  
  Dim upState As Boolean = True
  Dim sSong As Song
  While procStatus = True
    Wait 1
  Wend
  If PlayListSongs > 0 Then
    sSong = DataControl.DBPlayList
    DataControl.DelFirstItemPL
    
    If sSong.type <> "vonline" Then DataControl.Skm_Modo = sSong.type
    
    'Al terminar la reproducción se borra el archivo remoto
    'Si el archivo es el mismo al siguiente en la cola, se mantiene.
    If sSong.name <> SongPlaying Then 
      mPlayer.DeleteFile
    Else
      upState = False
    Endif
    'Si el archivo esta en proceso de envio al servidor, esperar hasta que termine el proceso.
    While UploadState = True
      Wait 1
    Wend
    
    'Si el archivo ya esta en el servidor se ignora el flag upState
    If sSong.name = UploadSong And upFailed = False Then upState = False
    StopMatrizLed
    If DataControl.VideoOut = True Then UploadState = True
    If sSong.type <> "vonline" Then
      mPlayer.Play(sSong.name, DataControl.getWorkDir() &/ sSong.genre &/ sSong.album, sSong.type, upState, sSong.cover)
      addMatrizLed("** Ahora sonando - " & sSong.album & " - " & Left$(sSong.name, -4) & " **")
    Else
      If upState = True Then
        procStatus = True
        hProcess = Exec ["youtube-dl", "-o", "/tmp/" & sSong.ID_video & ".mp4", "-f", "best[height<=?" & VideoRes & "]", "--no-check-certificate", "http://www.youtube.com/watch?v=" & sSong.ID_video] For Read As "hProcess"
        While procStatus = True
          Wait 1
        Wend
      Endif
      mPlayer.Play(sSong.ID_video & ".mp4", "/tmp", "Video", upState, "0")
      addMatrizLed("** Ahora sonando - " & Left$(sSong.name, -4) & " **")
    Endif
    If sSong.type = "Musica" Then 
      If SearchBoxShow = False Then MatrizLed.Show
      Try ResMovieBox.Stop
    Endif
    SongPlaying = sSong.name
    Dec PlayListSongs
    If PlayListSongs >= 1 And DataControl.VideoOut Then UploadTimer.Start
  Else
    $bState = False
    HideMovie
    mPlayer.DeleteFile
    ResMovieBox.Stop
    UploadTimer.Stop
    AutoPlay.Start
    TimeCont = 0
    mPlayer.mpControl = False
    If SearchBoxShow = False Then MatrizLed.Show
    addMatrizLed("Rockola digital - inserte una moneda")
  Endif
  
End

Public Sub UploadTimer_Timer()
  
  Dim sSong As Song
  
  'Si la salida de video está desactivado entonces lo ignora.
  If DataControl.VideoOut = False Then Return
  If UploadState = True Then Return
  
  'Si el servidor se encuentra en proceso de reinicio, ignorar el envio automático.
  If mPlayer.ResProcess Then Return
  UploadTimer.Stop
  If mPlayer.upProcess = True Or PlayListSongs = 0 Then Return
    
  sSong = DataControl.DBPlayList
  If sSong.name = "" Then Return
  
  If sSong.type <> "vonline" Then DataControl.Skm_Modo = sSong.type
  If sSong.name = SongPlaying Then
    Debug "El archivo ya se encuentra en el servidor, ignorando envio."
  Else
    Debug "Enviando archivo"
    If sSong.type <> "vonline" Then
      StopMatrizLed
      UploadState = True
      'Envio de archivo
      mPlayer.UploadFile(sSong.name, DataControl.getWorkDir() &/ sSong.genre &/ sSong.album &/ sSong.name)
      'Portada de album
      If sSong.cover <> "0" Then
        mPlayer.UploadFile(Left(sSong.name, -3) & Right(sSong.cover, 3), DataControl.getWorkDir() &/ sSong.genre &/ sSong.album &/ sSong.cover)
        upFailed = False
      Endif
    Else
      While procStatus = True
        Wait 1
      Wend
      UploadState = True
      hProcess = Exec ["youtube-dl", "-o", "/tmp/" & sSong.ID_video & ".mp4", "-f", "best[height<=?" & VideoRes & "]", "--no-check-certificate", "http://www.youtube.com/watch?v=" & sSong.ID_video] For Read As "hProcess"
      procStatus = True
      
      While procStatus = True
        Wait 1
      Wend
      StopMatrizLed
      mPlayer.UploadFile(sSong.ID_video & ".mp4", "/tmp/" & sSong.ID_video & ".mp4")
    Endif
  UploadSong = sSong.name
  Endif
  
End

Public Sub AutoPlay_Timer()
  
  Dim TotalAlbums, idPos, jmpPos, SongID, i As Integer
  Dim hResult As Result
  Dim sSong As New Song
  Dim skmodo As String
  '//Automatic Play
  If TimeCont = 15 Then
    
    i = Rnd(1, 10)
    If i < 6 Then
        skmodo = "Musica"
    Else
        skmodo = "Video"
    Endif
   
    DataControl.Skm_Modo = skmodo
    TotalAlbums = DataControl.getTotalAlbums("*")
    
    If TotalAlbums > 0 Then
      
      hResult = DataControl.getDataAlbum(Rnd(1, TotalAlbums))
      
      With sSong
        .album = hResult["Album"]
        .genre = hResult["Genero"]
        .type = DataControl.Skm_Modo
        .cover = hResult["Cover_name"]
      End With
      
      idPos = hResult["Total_songs"]
      
      If idPos > 0 Then
        
        idPos = Rnd(1, idPos)
        For i = 1 To 4
          Select idPos
            Case jmpPos + 1 To i * 25
              SongID = hResult["Songsid" & i]
              jmpPos = (i * 25) - 25
              Break
          End Select
        Next
        
        hResult = DataControl.getDataSongs(SongID)
        
        With sSong
          .id = hResult["id"]
          .idsong = idPos - jmpPos
          .name = hResult["N" & sSong.idsong]
        End With
        
        AddPlay(sSong)
        
      Endif
    Endif
    
    TimeCont = 0
    
  Else
  
    Inc TimeCont
  
  Endif
  
End

Public Sub mPlayer_UploadFinish()
  
  MatrizLed.Start
  UploadState = False
  Debug
  
End

Public Sub mPlayer_UploadFailed()
  
  ' mPlayer_UploadFinish
  MatrizLed.Start
  upFailed = True
  UploadState = False
  
End

Public Sub ResetResMovie()
  
  iCont = 0
  
End

Public Sub HideMovie()
  
  If mPlayer.VisibleMovieBox = True Then mPlayer.VisibleMovieBox = False
  If SearchBoxShow = False Then MatrizLed.Show
  ResMovieBox.Start
  ResetResMovie
  
End

Public Sub ResMovie()
  
  If mPlayer.VisibleMovieBox = False Then mPlayer.VisibleMovieBox = True
  MatrizLed.Hide
  ResMovieBox.Stop
  
End

Public Sub CancelSong()
  
  If $bState = True And UploadState = False Then mPlayer.PlayerStop
  
End

Private Sub addMatrizLed(sText As String)
  
  MatrizLed.Text = sText
  
End

Public Sub mPlayer_MovieBoxVisible()
  
  MatrizLed.Hide
  
End

Public Sub mPlayer_MovieBoxHide()
  
  MatrizLed.Show
  
End

Public Sub mPlayer_MovieBox_click()
  
  HideMovie
  
End

Public Sub ResMovieBox_Timer()
  
  Inc iCont
  
  If iCont = 5 Then ResMovie
  
End

Public Sub setPSearch(Value As Boolean)
  
  SearchBoxShow = Value
  
End

Private Function MatrizShow_Read() As Boolean

  Return MatrizLed.Visible

End

Private Sub MatrizShow_Write(Value As Boolean)

  MatrizLed.Visible = Value

End
