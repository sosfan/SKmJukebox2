' Gambas class file

' SKm Jukebox 2
'
' Descripción de la clase: Buscador de melodias
'
' Autores:
'  J. Francisco Facundo <sos.sempai@gmail.com>
'
' This program is free software; you can redistribute it and/or modify it under
' the terms of the GNU General Public License as published by the Free Software
' Foundation; version 3.
'
' This program is distributed in the hope that it will be useful, but WITHOUT
' ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
' FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
' details.
'
' You should have received a copy of the GNU General Public License along with
' this program; if not, write to the Free Software Foundation, Inc.,
' 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

Inherits Panel

Event ReturnMain
Event addPlay(sSong As Song)

Private DataControl As New CData
Private SingleKey As CKey
Private TextSearch As TextBox
Private STextSearch As String
Private suggesMenu As ListBox
Private CursorDelay As Timer
Private MainReturn As Timer
Private SecReturn As Integer = 50 ''Segundos que se tarda la ventana de busqueda en regresar al main
Private CursorShow As Boolean
Private CursorCont As Byte
Private ReturnCont As Byte
Private hSkinPath As String
Private hSkinTheme As Settings
Private ListResult As ScrollView
Private ResultSearch As CResult
Private $ListAlbum As New Object[]
Private $Keyboard As New Object[]
Private TypeSearch As Byte = 1 ''Establece el tipo de busqueda 1=Por título 2=Por Album
Private ModeSearch As Byte = 1 ''Establece el Modo de busqueda 1=Musica 2=Videos 3=Karaokes 4=Todos 5=Internet
Private navObject As New Object[]
Private bttnObject As New Object[]
Private SearchLabel As TextLabel

Private hAsyncClient As New HttpClient As "hAsyncClient"
Private sDownloadBuffer As String
Private dataInfo As Variant
Private ResultInfo As Variant
Private hProcess As Process
Private $buff As String
' Private $reintentos As Integer
Private LoadAnimation As MovieBox

Property CursorTimer As Boolean


Public Sub _new()
  
  'Leer configuracion del tema
  hSkinPath = DataControl.SkinPath & DataControl.SkinTheme
  hSkinTheme = New Settings(hSkinPath &/ "theme.conf")
  
  CursorDelay = New Timer As "CursorDelay"
  CursorDelay.Delay = 500
  CursorDelay.Start
  
  'Retorno automático al panel principal
  MainReturn = New Timer As "MainReturn"
  MainReturn.Delay = 1000
  
  TextSearch = New TextBox(Me)
  With TextSearch
    .X = hSkinTheme["TextSearch/X"]
    .Y = hSkinTheme["TextSearch/Y"]
    .H = hSkinTheme["TextSearch/H"]
    .W = hSkinTheme["TextSearch/W"]
    .Background = Color.White
    .Font.Bold = False
    .Font.Size = 17
    .ReadOnly = True
  End With
  
  suggesMenu = New ListBox(Me) As "suggesMenu"
  With suggesMenu
    .X = TextSearch.X
    .Y = TextSearch.Y + TextSearch.H
    .H = TextSearch.H * 5
    .W = TextSearch.W
    .Hide
    .Font.Name = "Ubuntu"
    .Font.Size = 16
    .Foreground = &H000040&
  End With
  
  LoadAnimation = New MovieBox(Me)
  With LoadAnimation
    .X = hSkinTheme["LoadingAni/X"]
    .Y = hSkinTheme["LoadingAni/Y"]
    .H = hSkinTheme["LoadingAni/H"]
    .W = hSkinTheme["LoadingAni/W"]
    ' .Animation = Animation.Load(hSkinPath &/ hSkinTheme["Images/LAnimation"])
    .Path = hSkinPath &/ hSkinTheme["Images/LAnimation"]
    .Playing = False
    .Hide
  End With
  
  SearchLabel = New TextLabel(Me)
  With SearchLabel
    .X = hSkinTheme["SearchLabel/X"]
    .Y = hSkinTheme["SearchLabel/Y"]
    .H = hSkinTheme["SearchLabel/H"]
    .W = hSkinTheme["SearchLabel/W"]
    .Font.Name = hSkinTheme["SearchLabel/Font"]
    .Font.Size = hSkinTheme["SearchLabel/FontSize"]
    .Foreground = hSkinTheme["SearchLabel/Foreground"]
    .Font.Bold = True
    .Alignment = Align.Center
    .Text = "Buscar Por Título en Música"
  End With
  
  CreateKeys
  CreateList
  
End

Private Sub CreateList()
  
  ListResult = New ScrollView(Me)
  With ListResult
    
    .X = hSkinTheme["ListResult/X"]
    .Y = hSkinTheme["ListResult/Y"]
    .H = hSkinTheme["ListResult/H"]
    .W = hSkinTheme["ListResult/W"]
    .ScrollBar = 2
    
  End With
  
End

Private Sub CreateKeys()
  
  Dim i, c, Xpos, Ypos, Hkey, Wkey As Integer
  Dim char As String
  
  Xpos = hSkinTheme["KeyboardSearch/X"]
  Ypos = hSkinTheme["KeyboardSearch/Y"]
  Hkey = hSkinTheme["KeyboardSearch/H"]
  Wkey = hSkinTheme["KeyboardSearch/W"]
  
  'Arreglo para botones
  For i = 0 To 4
    SingleKey = New CKey(Me) As "SingleKey"
     Select i
      Case 0
        char = "Por Título"
      Case 1
        char = "Por Álbum"
      Case 2
        char = "Borrar"
      Case 3
        char = "←"
        SingleKey.MultiSend = True
      Case 4
        char = "Buscar"
        Xpos = TextSearch.X + TextSearch.W + 3
        Ypos = TextSearch.Y - 3
        c = 0
    End Select
    With SingleKey
      .X = Xpos + Wkey * c
      .Y = Ypos
      .LetterKey = char
      .HKey = Hkey
      .WKey = Wkey
      .imgResPath = hSkinPath &/ hSkinTheme["Images/LongKey"]
    End With
    Inc c
    $Keyboard.Add(SingleKey)
  Next
  
  Xpos = $Keyboard[0].X
  Ypos = $Keyboard[0].Y + Hkey
  
  Hkey = hSkinTheme["KeyboardSearchSingleKey/H"]
  Wkey = hSkinTheme["KeyboardSearchSingleKey/W"]
  ' Hkey = 49
  ' Wkey = 49
  
  c = 0
  
  'Arreglo para teclado numerico
  For i = 48 To 57
    SingleKey = New CKey(Me) As "SingleKey"
    With SingleKey
      .X = Xpos + Wkey * c
      .Y = Ypos
      If i = 57 Then 
        .LetterKey = Chr$(48)
      Else
        .LetterKey = Chr$(i + 1)
      Endif
      .HKey = Hkey
      .WKey = Wkey
      .imgResPath = hSkinPath &/ hSkinTheme["Images/SingleKey"]
      .$idKey = "Single"
    End With
    
    Inc c
    $Keyboard.Add(SingleKey)
  Next
  c = 0
  Xpos = Xpos + Wkey / 3
  Ypos = Ypos + Hkey
  'Arreglo para teclado QWERTY
  For i = 0 To 30
    SingleKey = New CKey(Me) As "SingleKey"
    Select i
      Case 0
        char = "Q"
      Case 1
        char = "W"
      Case 2
        char = "E"
      Case 3
        char = "R"
      Case 4
        char = "T"
      Case 5
        char = "Y"
      Case 6
        char = "U"
      Case 7
        char = "I"
      Case 8
        char = "O"
      Case 9
        char = "P"
      Case 10
        char = "A"
        'Salto de posicion
        Xpos = Xpos + Wkey / 3
        Ypos = Ypos + Hkey
        c = 0
      Case 11
        char = "S"
      Case 12
        char = "D"
      Case 13
        char = "F"
      Case 14
        char = "G"
      Case 15
        char = "H"
      Case 16
        char = "J"
      Case 17
        char = "K"
      Case 18
        char = "L"
      Case 19
        char = "Ñ"
      Case 20
        char = "Z"
        'Salto de posicion
        Xpos = Xpos + Wkey / 3
        Ypos = Ypos + Hkey
        c = 0
      Case 21
        char = "X"
      Case 22
        char = "C"
      Case 23
        char = "V"
      Case 24
        char = "B"
      Case 25
        char = "N"
      Case 26
        char = "M"
      Case 27
        char = ","
      Case 28
        char = "."
      Case 29
        char = "-"
      Case 30
        'Barra espaciadora
        char = " "
        'Salto de posicion
        Ypos = Ypos + Hkey
        c = 2
    End Select
    
    With SingleKey
      'Define la tecla espaciadora
      If i = 30 Then
        .Hkey = hSkinTheme["KeyboardSearchSpaceKey/H"]
        .Wkey = hSkinTheme["KeyboardSearchSpaceKey/W"]
        ' .HKey = 50
        ' .WKey = 273
        .$idKey = "Space"
        .imgResPath = hSkinPath &/ hSkinTheme["Images/SpaceKey"]
      Else
        'Teclas normales
        .HKey = Hkey
        .WKey = Wkey
        .$idKey = "Single"
        .imgResPath = hSkinPath &/ hSkinTheme["Images/SingleKey"]
      Endif
      
      .X = Xpos + Wkey * c
      .Y = Ypos
      .LetterKey = char
    
    End With
    
    Inc c
    $Keyboard.Add(SingleKey)
  Next
  
  'Navegadores
  For i = 3 To 5
    SingleKey = New CKey(Me) As "Navigator"
    With SingleKey
      .X = hSkinTheme["Navigator" & i & "/X"]
      .Y = hSkinTheme["Navigator" & i & "/Y"]
      .Hkey = hSkinTheme["Navigator" & i & "/H"]
      .Wkey = hSkinTheme["Navigator" & i & "/W"]
      .$idKey = "Nav" & i
      .imgResPath = hSkinPath &/ hSkinTheme["Images/Nav" & (i - 1)]
    End With
    navObject.Add(SingleKey)
  Next
  
  'Botones
  For i = 0 To 5
    SingleKey = New CKey(Me) As "BttnSearch"
    Select i
      Case 0
        char = "PopularBttn"
      Case 1
        char = "AllBttn"
      Case 2
        char = "VOnlineBttn"
      Case 3
        char = "MusicaBttn"
      Case 4
        char = "VideosBttn"
      Case 5
        char = "KaraokeBttn"
        
    End Select
    With SingleKey
      .X = hSkinTheme[char & "/X"]
      .Y = hSkinTheme[char & "/Y"]
      .Hkey = hSkinTheme[char & "/H"]
      .Wkey = hSkinTheme[char & "/W"]
      .$idKey = char
      .imgResPath = hSkinPath &/ hSkinTheme["Images/" & char]
    End With
    bttnObject.Add(SingleKey)
  Next
  
End

Public Sub SingleKey_PulseKey()
  
  Dim sMess, webstring As String
  
  'Si el cursor esta visible, borrarlo primero.
  If CursorShow Then 
    TextSearch.Text = STextSearch
  Endif
  If Last.$idKey = "Single" Or Last.$idKey = "Space" Then 
    If STextSearch & Last.LetterKey = " " Then Return
    TextSearch.Text = TextSearch.Text & Last.LetterKey & "|"
    STextSearch = STextSearch & Last.LetterKey
    If ModeSearch = 5 Then
      webstring = Trim(STextSearch)
      DownloadAsync(webstring)
    Endif
  Else
    Select ModeSearch
      Case 1
        sMess = " en Música"
      Case 2
        sMess = " en Vídeos"
      Case 3
        sMess = " en Karaokes"
      Case 4
        sMess = " en Todos"
    End Select
    Select Last.LetterKey
      Case "Por Título"
        TypeSearch = 1
        If ModeSearch < 5 Then
          SearchLabel.Text = "Buscar " & Last.LetterKey & sMess
        Endif
        Buscar
        TextSearch.Text = STextSearch
      Case "Por Álbum"
        TypeSearch = 2
        If ModeSearch < 5 Then
          SearchLabel.Text = "Buscar " & Last.LetterKey & sMess
        Endif
        Buscar
        TextSearch.Text = STextSearch
      Case "Borrar"
        ClearSearch
        CleanResult
      Case "←"
        If Right$(STextSearch, 2) = "Ñ" Then
          TextSearch.Text = Left$(STextSearch, -2) & "|"
          STextSearch = Left$(STextSearch, -2)
          If ModeSearch = 5 And Len(STextSearch) > 0 Then
            webstring = Trim(STextSearch)
            DownloadAsync(webstring)
          Endif
        Else
          TextSearch.Text = Left$(STextSearch, -1) & "|"
          STextSearch = Left$(STextSearch, -1)
          If ModeSearch = 5 And Len(STextSearch) > 0 Then
            webstring = Trim(STextSearch)
            DownloadAsync(webstring)
          Endif
        Endif
      Case "Buscar"
        Buscar
        TextSearch.Text = STextSearch & "|"
      Case Else
        TextSearch.Text = STextSearch & "|"
    End Select
  Endif
  CursorShow = True
  CursorCont = 0
  ReturnCont = 0
  
End

Private Sub Buscar()
  
  Dim i, b, c As Integer, $ids As New Integer[], sResult, hResult As Result, sText, sTab, sAlb As String
  
  If STextSearch.Len = 0 Then Return
  
  CleanResult
  
  With LoadAnimation
    .Show
    .Playing = True
  End With
  
  Wait 0.5
  
  Select ModeSearch
    Case 1
      sTab = "mp3"
      sAlb = "album_id"
    Case 2
      sTab = "video"
      sAlb = "video_album_id"
    Case 3
      sTab = "karaoke"
      sAlb = "karaoke_album_id"
    Case 4
      sTab = "mp3"
      sAlb = "album_id"
    Case 5
      suggesMenu.Hide
      YTSearch
      Return
  End Select
  
  sText = Replace(STextSearch, "Ñ", "ñ")
  
  If sText = "" Then
      With LoadAnimation
        .Hide
        .Playing = False
      End With
     Return
  Endif 
  hResult = DataControl.getDataSearch(ModeSearch, TypeSearch, sText)
  If hResult.Count = 0 Then
     With LoadAnimation
        .Hide
        .Playing = False
     End With
     Return
  Endif 
  
  For i = 0 To hResult.Max
    If TypeSearch = 1 Then 'Buscar en modo Por Titulos
      ResultSearch = New CResult(ListResult) As "ResultSong"
      DataControl.Skm_Modo = hResult["Tipo"]
      With ResultSearch
        .IDAlbum = hResult["id"]
        .Nombre = Left(hResult[sTab & ".N1"], -4)
        .Filename = hResult[sTab & ".N1"]
        .Genre = hResult[sAlb & ".Genero"]
        .Album = hResult[sAlb & ".Album"]
        .IDSong = hResult[sTab & ".id"]
        sResult = DataControl.getDataSongs(hResult[sTab & ".id"])
        For c = 1 To 25
          If sResult["N" & c] = hResult[sTab & ".N1"] Then 
            .Npos = c
          Endif
        Next
        ' .Npos =
        .Duration_Video = hResult[sAlb & ".Album"]
        .sType = hResult["Tipo"]
        .Cover = hResult[sAlb & ".Cover_name"]
        If hResult[sAlb & ".Cover_name"] = "0" Then
          .CoverLoad("0")
        Else
          .CoverLoad(DataControl.getWorkDir() &/ hResult[sAlb & ".Genero"] &/ hResult[sAlb & ".Album"] &/ hResult[sAlb & ".Cover_name"])
        Endif
        .X = 0
        .Y = hSkinTheme["ResultItem/H"] * i + 5
        .H = hSkinTheme["ResultItem/H"]
        .W = hSkinTheme["ResultItem/W"]
      End With
    Else 'Buscar en modo Por Album
      ResultSearch = New CResult(ListResult) As "ResultAlbum"
      DataControl.Skm_Modo = hResult["Tipo"]
      With ResultSearch
          .IDAlbum = hResult["id"]
          .Nombre = hResult["Album"]
          .Genre = hResult["Genero"]
          .Duration_Video = hResult["Total_songs"] & " canciones en " & UCase(hResult["Tipo"])
          .sType = hResult["Tipo"]
          .Cover = hResult["Cover_name"]
        If hResult["Cover_name"] = "0" Then
          .CoverLoad("0")
        Else
          .CoverLoad(DataControl.getWorkDir() &/ hResult["Genero"] &/ hResult["Album"] &/ hResult["Cover_name"])
        Endif
        For b = 1 To 4
          $ids.Add(hResult["Songsid" & b])
        Next
        .$idsongs($ids)
        $ids.Clear
        .X = 0
        .Y = hSkinTheme["ResultItem/H"] * i + 5
        .H = hSkinTheme["ResultItem/H"]
        .W = hSkinTheme["ResultItem/W"]
      End With
    Endif
    
    $ListAlbum.Add(ResultSearch)
    hResult.MoveNext
  Next
  
  CursorCont = 0
  ReturnCont = 0
  
  With LoadAnimation
    .Hide
    .Playing = False
  End With
  
End

Private Sub PopularSearch()
  
  Dim idResult, hResult As Result, i, c As Integer, sTab, sAlb As String
  
  CleanResult
  
  idResult = DataControl.getIdPlayHistory()
  hResult = DataControl.getPlayHistory()
  
  If Object.IsValid(hResult) = False Then Return 
  
  Select hResult["Tipo"]
      Case "musica"
        sTab = "mp3"
        sAlb = "album_id"
      Case "video"
        sTab = "video"
        sAlb = "video_album_id"
      Case "karaoke"
        sTab = "karaoke"
        sAlb = "karaoke_album_id"
    End Select
    
    c = idResult["N"]
    
  For i = 0 To hResult.Max
    DataControl.Skm_Modo = hResult["Tipo"]
    ResultSearch = New CResult(ListResult) As "ResultSong" 
    With ResultSearch
        .IDAlbum = idResult["idalbum"]
        .Nombre = Left(hResult[sTab & ".N" & c], -4)
        .Filename = hResult[sTab & ".N" & c]
        .Genre = hResult[sAlb & ".Genero"]
        .Album = hResult[sAlb & ".Album"]
        .IDSong = idResult["idsong"]
        .Npos = idResult["N"]
        .Duration_Video = hResult[sAlb & ".Album"]
        .sType = idResult["type"]
        .Cover = hResult[sAlb & ".Cover_name"]
        If hResult[sAlb & ".Cover_name"] = "0" Then
          .CoverLoad("0")
        Else
          .CoverLoad(DataControl.getWorkDir() &/ hResult[sAlb & ".Genero"] &/ hResult[sAlb & ".Album"] &/ hResult[sAlb & ".Cover_name"])
        Endif
        .X = 0
        .Y = hSkinTheme["ResultItem/H"] * i + 5
        .H = hSkinTheme["ResultItem/H"]
        .W = hSkinTheme["ResultItem/W"]
    End With
    $ListAlbum.Add(ResultSearch)
    hResult.MoveNext
    idResult.MoveNext
  Next
  
  
End

Private Sub CleanResult()
  
  Dim i As Byte
  
  If $ListAlbum.Count > 0 Then
    For i = 0 To $ListAlbum.Max
      Try $ListAlbum[i].CleanMiniCover
      Try $ListAlbum[i] = Null
    Next
    Debug
    $ListAlbum.Clear
    $ListAlbum = Null
    ListResult.Delete
    ListResult = Null
    $ListAlbum = New Object[]
    CreateList
  Endif
  
  Catch
    Debug Error.Text
    
End

Public Sub ResultSong_Click(sSong As Song)
  
  If sSong.idalbum = -1 Then
    Buscar
  Else
    Raise addPlay(sSong)
  Endif
  ReturnCont = 0
  
End

Public Sub ResultAlbum_Click(tAlbum As Song)
  
  Dim i, b, c As Integer, hResult As Result, sAlbum As Song
  Dim idArray As New Integer[]
  
  sAlbum = tAlbum
  CleanResult
  DataControl.Skm_Modo = sAlbum.type
  
  idArray.Add(sAlbum.ids1)
  idArray.Add(sAlbum.ids2)
  idArray.Add(sAlbum.ids3)
  idArray.Add(sAlbum.ids4)
  
  'Elemento para regresar a la lista de album
  ResultSearch = New CResult(ListResult) As "ResultSong"
  With ResultSearch
    .IDAlbum = -1
    .CoverLoad(hSkinPath &/ hSkinTheme["Images/BackIcon"])
    .X = 0
    .Y = 4
    .H = hSkinTheme["ResultItem/H"]
    .W = hSkinTheme["ResultItem/W"]
  End With
  $ListAlbum.Add(ResultSearch)
  
  For i = 0 To 3
    If idArray[i] = 0 Then Break
    hResult = DataControl.getDataSongs(idArray[i])
    For b = 1 To 25
      Inc c
      If hResult["N" & b] = "" Then Break
      ResultSearch = New CResult(ListResult) As "ResultSong"
      With ResultSearch
        .IDAlbum = sAlbum.id
        .Nombre = Left(hResult["N" & b], -4)
        .Filename = hResult["N" & b]
        .Genre = sAlbum.genre
        .Album = sAlbum.name
        .Duration_Video = sAlbum.name
        .sType = sAlbum.type
        .Cover = sAlbum.cover
        If sAlbum.cover = "0" Then
          .CoverLoad("0")
        Else
          .CoverLoad(DataControl.getWorkDir() &/ sAlbum.genre &/ sAlbum.name &/ sAlbum.cover)
        Endif
        .X = 0
        .Y = hSkinTheme["ResultItem/H"] * c + 4
        .H = hSkinTheme["ResultItem/H"]
        .W = hSkinTheme["ResultItem/W"]
      End With
      $ListAlbum.Add(ResultSearch)
    Next
  
  Next
  ReturnCont = 0
  
End

Public Sub CursorDelay_Timer()
  
  If CursorCont > 1 Then
    If CursorShow = False Then
      TextSearch.Text = STextSearch & "|"
      CursorShow = True
    Else
      TextSearch.Text = STextSearch
      CursorShow = False
    Endif
  Else
    Inc CursorCont
  Endif
  
End

Public Sub ShowSearch()
  
  CursorDelay.Start
  ReturnCont = 0
  MainReturn.Start
  
End

Public Sub HideSearch()
  
  CursorDelay.Stop
  ClearSearch
  ListResult.Delete
  CreateList
  MainReturn.Stop
  CleanResult
  TypeSearch = 1
  ModeSearch = 1
  SearchLabel.Text = "Buscar Por Título en Música"
  With LoadAnimation
    .Hide
    .Playing = False
  End With
  
End

Private Sub ClearSearch()
  
  'limpiar la busqueda
  
  TextSearch.text = "|"
  STextSearch = ""
  suggesMenu.Clear
  suggesMenu.Hide
  
  CursorShow = True
  
End

Public Sub Navigator_PulseKey()
  
  Select Last.$idKey
    Case "Nav3"
      Raise ReturnMain
      HideSearch
    Case "Nav4"
      ListResult.Scroll(0, ListResult.ScrollY - ListResult.H - 2)
    Case "Nav5"
      ListResult.Scroll(0, ListResult.ScrollY + ListResult.H - 2)
  End Select
  
  CursorCont = 0
  ReturnCont = 0
  
End

Private Sub YTSearch()
  
  If Object.IsValid(hProcess) Then
    If hProcess.State = Process.Running Then
      hProcess.Kill
      $buff = ""
    Endif
  Endif
  CleanResult
  With LoadAnimation
    .Show
    .Playing = True
  End With
  
  ' hProcess = Exec ["youtube-dl", "--get-title", "--get-id", "--get-duration", "--get-thumbnail", "--max-filesize", "50m", "--no-color", "--no-playlist", "--skip-download", "ytsearch20:'" & STextSearch & "'"] For Read As "hProcess"
  
  hProcess = Exec ["python3", "/usr/bin/ysearch.py", STextSearch] For Read As "hProcess"
  $buff = ""
  
End

Public Sub hProcess_Read()
  
  Dim sBuffer As String ', tmp As String[], i As Integer

  sBuffer = Read #Last, Lof(Last)
  $buff &= sBuffer
  ' Print sBuffer
  ' If $buff.Count = 0 Then
  '   $buff = Split(sBuffer, "\n", "", True)
  ' Else
  '   ' $buff.Add(sBuffer)
  '   tmp = Split(sBuffer, "\n", "", True)
  '   For i = 0 To tmp.Max
  '     $buff.Add(tmp[i])
  '   Next
  ' Endif
  
  ' Print $buff[0]
  
End

Public Sub hProcess_Error(sError As String)

  With LoadAnimation
    .Hide
    .Playing = False
  End With
  
  Debug sError
  
End

Public Sub hProcess_Kill()
  
  Dim i, b As Short, timLen, imgUrl As String, CacheInfo As String
  
  If ModeSearch <> 5 Then Return
  
  If $buff = "" Then Return
  
  ResultInfo = Null
  ResultInfo = JSON.Decode(Conv($buff, "ISO-8859-1", "utf-8"))
  
  If ResultInfo["result"].Length > 0 Then
    For i = 0 To ResultInfo["result"].max
      If Len(ResultInfo["result"][i]["duration"]) > 3 Then 'ignorar videos menores a 1 min
        CacheInfo = ""
        timLen = Left(ResultInfo["result"][i]["duration"], -3)
        If Len(timLen) < 2 And CInt(Right(timLen, 1)) < 9 Then
          ResultSearch = New CResult(ListResult) As "ResultSong"
          imgUrl = ResultInfo["result"][i]["thumbnails"][0]["url"]
          With ResultSearch
            .Nombre = ResultInfo["result"][i]["title"]
            .ID_Video = ResultInfo["result"][i]["id"]
            .URL_Image = String.Mid(imgUrl, 1, InStr(imgUrl, "?") - 1)
            ' .URL_Image = imgUrl
            If DataControl.SearchCacheID(.ID_Video) = True Then CacheInfo = " == DESCARGADO =="
            .Duration_Video = ResultInfo["result"][i]["duration"] & CacheInfo
            .sType = "vonline"
            .X = 0
            .Y = hSkinTheme["ResultItem/H"] * b + 5
            .H = hSkinTheme["ResultItem/H"]
            .W = hSkinTheme["ResultItem/W"]
          End With
          Inc b
          $ListAlbum.Add(ResultSearch)
        Endif
      Endif
    Next
  Endif
  
  ' If $buff.Count > 1 Then
  '     For i = 0 To $buff.Max Step 4
  '       If Len($buff[i + 3]) > 3 Then 'ignorar videos menores a 1 min
  '         stime = Left($buff[i + 3], -3)
  '         If Len(stime) < 2 And CInt(Right(stime, 1)) < 9 Then
  '           ResultSearch = New CResult(ListResult) As "ResultSong"
  '           With ResultSearch
  '             .Nombre = $buff[i]
  '             .ID_Video = $buff[i + 1]
  '             .URL_Image = $buff[i + 2]
  '             .Duration_Video = $buff[i + 3]
  '             .sType = "vonline"
  '             .X = 0
  '             .Y = hSkinTheme["ResultItem/H"] * b + 5
  '             .H = hSkinTheme["ResultItem/H"]
  '             .W = hSkinTheme["ResultItem/W"]
  '           End With
  '           Inc b
  '           $ListAlbum.Add(ResultSearch)
  '         Endif
  '       Endif
  '     Next
  ' 
  ' Else
  '   If $buff.Count = 1 Then
  '     'En caso de error, reintentar busqueda
  '     If Left($buff[0], 5) = "ERROR" Then
  '       Debug "Error en JSON"
  '     Endif
  '   Endif
  '   If $reintentos < 2 Then
  '     Inc $reintentos
  '     
  '     YTSearch
  '     
  '   Else
  '     $reintentos = 0
  ' 
  '     Return
  '   Endif
  ' Endif
  
  With LoadAnimation
    .Hide
    .Playing = False
  End With
  
End

Private Sub DownloadAsync(search As String)
  
  search = Replace(search, " ", "+")
  sDownloadBuffer = ""
  hAsyncClient.URL = "http://suggestqueries.google.com/complete/search?q=" & search & "&ds=yt&client=firefox&hl=es"
  hAsyncClient.TimeOut = 20
  hAsyncClient.Async = True
  ' hAsyncClient.Debug = True
  ' hAsyncClient.Encoding = "utf-8"
  Try hAsyncClient.Get()
  
  Catch
    Debug Error.Text

End

Public Sub hAsyncClient_Read()

  Dim sBuffer As String

  sBuffer = Read #Last, Lof(Last)
  sDownloadBuffer &= sBuffer

End

Public Sub hAsyncClient_Finished()

  Dim c As Byte
  If sDownloadBuffer = "" Then Return
  dataInfo = Null
  Try dataInfo = JSON.Decode(Conv(sDownloadBuffer, "ISO-8859-1", "utf-8"))
  suggesMenu.Clear
  If dataInfo[1].max > 0 Then
    For c = 0 To dataInfo[1].max
      suggesMenu.Add(dataInfo[1][c], c)
    Next
    suggesMenu.Show
    suggesMenu.Raise
  Endif
  
  Catch
    Debug Error.Text

End

Public Sub suggesMenu_Select()

  CursorShow = False
  TextSearch.text = UCase(Last.text)
  STextSearch = UCase(Last.text)
  suggesMenu.Visible = False
  ReturnCont = 0
  If ModeSearch = 5 Then Buscar

End

Public Sub TextSearch_Change()

  suggesMenu.Hide
  ReturnCont = 0

End

Public Sub BttnSearch_PulseKey()
  
  Dim sMess As String
  If CursorShow = True
    CursorShow = False
    CursorDelay.Stop
    TextSearch.Text = STextSearch
  Endif
  
  If TypeSearch = 1 Then
     sMess = "Por Título"
  Else
     sMess = "Por Álbum"
  Endif
  
  Select Last.$idKey
    Case "PopularBttn"
      SearchLabel.Text = "Mostrando los Más Tocados"
      PopularSearch
      CursorCont = 0
      ReturnCont = 0
      Return
    Case "AllBttn"
      ModeSearch = 4
      SearchLabel.Text = "Buscar " & sMess & " en Todos"
    Case "VOnlineBttn"
      ModeSearch = 5
      SearchLabel.Text = "Buscar Vídeos en Línea"
    Case "MusicaBttn"
      ModeSearch = 1
      SearchLabel.Text = "Buscar " & sMess & " en Música"
    Case "VideosBttn"
      ModeSearch = 2
      SearchLabel.Text = "Buscar " & sMess & " en Vídeos"
    Case "KaraokeBttn"
      ModeSearch = 3
      SearchLabel.Text = "Buscar " & sMess & " en Karaokes"
  End Select
  With LoadAnimation
    .Hide
    .Playing = False
  End With
  Buscar
  CursorShow = True
  CursorDelay.Start
  CursorCont = 0
  ReturnCont = 0
  
End

Public Sub MainReturn_Timer()
  
  If ReturnCont > SecReturn Then
    Raise ReturnMain
    HideSearch
    TextSearch.Clear
    With LoadAnimation
    .Hide
    .Playing = False
    End With
    TypeSearch = 1
    ModeSearch = 1
    SearchLabel.Text = "Buscar Por Título en Música"
  Else
    Inc ReturnCont
  Endif
  
End

Private Function CursorTimer_Read() As Boolean

  Return CursorDelay.Enabled

End

Private Sub CursorTimer_Write(Value As Boolean)

  CursorDelay.Enabled = Value

End
