' Gambas class file

'
' Authors:
'  J. Francisco Facundo <sos.sempai@gmail.com>
'
' This program is free software; you can redistribute it and/or modify it under
' the terms of the GNU General Public License as published by the Free Software
' Foundation; version 3.
'
' This program is distributed in the hope that it will be useful, but WITHOUT
' ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
' FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
' details.
'
' You should have received a copy of the GNU General Public License along with
' this program; if not, write to the Free Software Foundation, Inc.,
' 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Fast
Inherits Panel

Event ForwardKey
Event BackwardKey
Event VolMinus
Event VolPlus
Event ReloadAlbums
Event NavJump(Value As String)

Private DataControl As New CData
Private CoverAlbum As New Object[]
Private Cover As CAlbum
Private CoverDefault As String
Private CoverList As CAlbum
Private AlbumNameList As TextLabel
Private Playlist As New CPlaylist
Private CSongList As Panel
Private Song As TextLabel
Private sSong As Song
Private SongList As New Object[]
Private BackImage As PictureBox
Private Navigator As CKey
Private SearchBttn As CKey
Private ChangeBttn As CKey
Private GenreBttn As CKey
Private VolPlusBttn As CKey
Private VolMinusBttn As CKey
Private Navigators As New Object[]
Private sAlbums As New Integer[10]
Private idAlbum As Integer
Private TotalAlbums As Integer
Private TotalSongs As Short
Private Genre As String = "*" ''Genero seleccionado que se visualizara
Private $hResult As Result
Private hSkinPath As String
Private hSkinTheme As Settings
Private SelectAlbum As String
Private SelectGenre As String
Private SearchBox As CSearch
Private PageList As TextLabel
Private GenreLabel As TextLabel
Private CreditLbl As TextLabel
Private PlayAllSongs As PictureBox
Private InfoBox As CPanel
Private NavKbd As CNavKbd

Property Skm_Modo As String ''Establece la cadena para identificar el modo de visualización del objeto. (Musica, Video, Karaoke)
Property NumberPos As Integer[] ''Establece o retorna el array identificador del los albumnes que se usará como índice.
Property $Genre As String ''Establece o retorna la cadena de Genero seleccionada.
Property PageNum As Integer ''Establece el numero de pagina mostrada


Public Sub _new()
  
  Dim i As Short
  'Leer configuracion del tema
  hSkinPath = DataControl.SkinPath & DataControl.SkinTheme
  hSkinTheme = New Settings(hSkinPath &/ "theme.conf")
  BackImage = New PictureBox(Me) As "BackImage"
  'Cuadro de busqueda
  SearchBox = New CSearch(Me) As "SearchBox"
  'Navigators
  For i = 0 To 2
    Navigator = New CKey(Me) As "Navigator"
    With Navigator
      .X = hSkinTheme["Navigator" & i & "/X"]
      .Y = hSkinTheme["Navigator" & i & "/Y"]
      .HKey = hSkinTheme["Navigator" & i & "/H"]
      .WKey = hSkinTheme["Navigator" & i & "/W"]
      .imgResPath = hSkinPath &/ hSkinTheme["Images/Nav" & i]
      .$idKey = "Nav" & i
      If i = 2 Then
        .Hide
      Else
        .MultiSend = DataControl.AutoScroll
      Endif
    End With
    Navigators.Add(Navigator)
  Next
  
  'Botones
  SearchBttn = New CKey(Me) As "SearchBttn"
  ChangeBttn = New CKey(Me) As "ChangeBttn"
  GenreBttn = New CKey(Me) As "GenreBttn"
  VolMinusBttn = New CKey(Me) As "VolMinusBttn"
  VolPlusBttn = New CKey(Me) As "VolPlusBttn"
  
  'Matriz de controles CoverAlbum
  For i = 1 To 10
    Cover = New CAlbum(Me) As "Cover"
    Cover.Cover = CoverDefault
    CoverAlbum.Add(Cover)
  Next
  
  'List view
  CoverList = New CAlbum(Me)
  CoverList.Visible = False

  CSongList = New Panel(Me)
  CSongList.Visible = False
  
  AlbumNameList = New TextLabel(Me)
  AlbumNameList.Visible = False
  
  'Crea la lista de canciones, 30 etiquetas
  For i = 1 To 30
    Song = New TextLabel(CSongList) As "Song"
    With Song
      .Visible = False
      .Font.Name = hSkinTheme["SongList/Font"]
      .Font.Size = hSkinTheme["SongList/FontSize"]
      .Font.Bold = True
      .Foreground = CInt(hSkinTheme["SongList/Foreground"])
      .Wrap = True
      .Alignment = 0
      .Padding = 3
    End With
    
    SongList.Add(Song)
  Next
  
  PlayAllSongs = New PictureBox(Me) As "PlayAllSongs"
  'Lista de paginas
  PageList = New TextLabel(Me)
  'Etiqueta de Generos
  GenreLabel = New TextLabel(Me)
  'Etiqueta de creditos
  CreditLbl = New TextLabel(Me)
  'Cuadro de información
  InfoBox = New CPanel(Me) As "InfoBox"
  'Teclado de navegación
  NavKbd = New CNavKbd(Me) As "NavKbd"

  LoadThemeConfiguration()
  
End

Private Sub LoadThemeConfiguration()
  
  Dim p, c, i, $H, $W As Short
  
  With BackImage
    .X = 0
    .Y = 0
    .W = hSkinTheme["Window/W"]
    .H = hSkinTheme["Window/H"]
    .Stretch = True
    FMain.W = .W
    FMain.H = .H
  End With
  
  With SearchBox
    .X = 0
    .Y = 0
    .W = hSkinTheme["Window/W"]
    .H = hSkinTheme["Window/H"]
    .Visible = False
  End With
  
  'Botones
  With SearchBttn
    .X = hSkinTheme["SearchBttn/X"]
    .Y = hSkinTheme["SearchBttn/Y"]
    .WKey = hSkinTheme["SearchBttn/W"]
    .HKey = hSkinTheme["SearchBttn/H"]
    .imgResPath = hSkinPath &/ hSkinTheme["Images/SearchBttn"]
  End With
  
  With ChangeBttn
    .X = hSkinTheme["ChangeBttn/X"]
    .Y = hSkinTheme["ChangeBttn/Y"]
    .WKey = hSkinTheme["ChangeBttn/W"]
    .HKey = hSkinTheme["ChangeBttn/H"]
    .imgResPath = hSkinPath &/ hSkinTheme["Images/MusicaBttn"]
    .$idKey = "musica"
  End With
  
  With GenreBttn
    .X = hSkinTheme["GenreBttn/X"]
    .Y = hSkinTheme["GenreBttn/Y"]
    .WKey = hSkinTheme["GenreBttn/W"]
    .HKey = hSkinTheme["GenreBttn/H"]
    .imgResPath = hSkinPath &/ hSkinTheme["Images/GenreBttn"]
  End With
  
  With VolMinusBttn
    .X = hSkinTheme["VolMinusBttn/X"]
    .Y = hSkinTheme["VolMinusBttn/Y"]
    .WKey = hSkinTheme["VolMinusBttn/W"]
    .HKey = hSkinTheme["VolMinusBttn/H"]
    .imgResPath = hSkinPath &/ hSkinTheme["Images/VolMinusBttn"]
  End With
  
  With VolPlusBttn
    .X = hSkinTheme["VolPlusBttn/X"]
    .Y = hSkinTheme["VolPlusBttn/Y"]
    .WKey = hSkinTheme["VolPlusBttn/W"]
    .HKey = hSkinTheme["VolPlusBttn/H"]
    .imgResPath = hSkinPath &/ hSkinTheme["Images/VolPlusBttn"]
  End With
  
  'Default cover picture
  CoverDefault = hSkinPath &/ hSkinTheme["Images/CoverDefault"]
  
  ShowBackground("Background")
  For i = 0 To 9
    With CoverAlbum[i]
      .SizeH = hSkinTheme["Album" & i & "/H", 180]
      .SizeW = hSkinTheme["Album" & i & "/W", 180]
      .XPos = hSkinTheme["Album" & i & "/X"]
      .YPos = hSkinTheme["Album" & i & "/Y"]
      .AlbumNameText.Font.Name = hSkinTheme["AlbumNameText/Font"]
      .AlbumNameText.Font.Size = hSkinTheme["AlbumNameText/FontSize"]
      .AlbumNameText.Alignment = hSkinTheme["AlbumNameText/Align"]
      .AlbumNameText.Foreground = hSkinTheme["AlbumNameText/Foreground"]
      
      .AlbumSongsText.Font.Name = hSkinTheme["AlbumNameText/Font"]
      .AlbumSongsText.Font.Size = hSkinTheme["AlbumNameText/FontSize"]
      .AlbumSongsText.Alignment = hSkinTheme["AlbumNameText/Align"]
      .AlbumSongsText.Foreground = hSkinTheme["AlbumNameText/Foreground"]
      
      .AlbumNumText.Font.Name = hSkinTheme["AlbumNumText/Font"]
      .AlbumNumText.Font.Size = hSkinTheme["AlbumNumText/FontSize"]
      .AlbumNumText.Alignment = hSkinTheme["AlbumNumText/Align"]
      .AlbumNumText.Foreground = hSkinTheme["AlbumNumText/Foreground"]
    End With
  Next
  
  With PlayAllSongs
    .X = hSkinTheme["PlayAllSongs/X"]
    .Y = hSkinTheme["PlayAllSongs/Y"]
    .W = hSkinTheme["PlayAllSongs/W"]
    .H = hSkinTheme["PlayAllSongs/H"]
    .Picture = Picture[hSkinPath &/ hSkinTheme["Images/PlayAllBttn"]]
    .Hide
  End With

  With CreditLbl
    .X = hSkinTheme["CreditLbl0/X"]
    .Y = hSkinTheme["CreditLbl0/Y"]
    .W = hSkinTheme["CreditLbl0/W"]
    .H = hSkinTheme["CreditLbl0/H"]
    .Font.Name = hSkinTheme["CreditLbl0/Font"]
    .Font.Size = hSkinTheme["CreditLbl0/FontSize"]
    .Font.Bold = True
    .Alignment = Align.Center
    .Foreground = CInt(hSkinTheme["CreditLbl0/Foreground"])
    .Text = DataControl.Credito
  End With
'Ajustar la imagen del caratula en la lista de canciones
  With CoverList
    .XPos = hSkinTheme["CoverList/X"]
    .YPos = hSkinTheme["CoverList/Y"]
    .SizeH = hSkinTheme["CoverList/H"]
    .SizeW = hSkinTheme["CoverList/W"]
  End With
  
  With PageList
    .X = hSkinTheme["PageList/X"]
    .Y = hSkinTheme["PageList/Y"]
    .W = hSkinTheme["PageList/W"]
    .H = hSkinTheme["PageList/H"]
    .Font.Name = hSkinTheme["PageList/Font"]
    .Font.Size = hSkinTheme["PageList/FontSize"]
    .Font.Bold = True
    .Alignment = Align.Center
    .Foreground = CInt(hSkinTheme["PageList/Foreground"])
  End With
  
  With GenreLabel
    .X = hSkinTheme["GenreLabel/X"]
    .Y = hSkinTheme["GenreLabel/Y"]
    .W = hSkinTheme["GenreLabel/W"]
    .H = hSkinTheme["GenreLabel/H"]
    .Font.Name = hSkinTheme["GenreLabel/Font"]
    .Font.Size = hSkinTheme["GenreLabel/FontSize"]
    .Font.Bold = True
    .Alignment = Align.Center
    .Foreground = CInt(hSkinTheme["GenreLabel/Foreground"])
    .Text = "Todos"
  End With
  
  With InfoBox
    .X = hSkinTheme["InfoBox/X"]
    .Y = hSkinTheme["InfoBox/Y"]
    .H = hSkinTheme["InfoBox/H"]
    .W = hSkinTheme["InfoBox/W"]
    .Hide
  End With
  
  With NavKbd
    .X = hSkinTheme["NavKbdKey/X"]
    .Y = hSkinTheme["NavKbdKey/Y"]
    .H = (hSkinTheme["NavKbdKey/H"] * 2) + 20
    .W = hSkinTheme["NavKbdKey/W"] * 16
  End With
  
  With AlbumNameList
    .X = hSkinTheme["AlbumNameList/X"]
    .Y = hSkinTheme["AlbumNameList/Y"]
    .H = hSkinTheme["AlbumNameList/H"]
    .W = hSkinTheme["AlbumNameList/W"]
    .Font.Name = hSkinTheme["AlbumNameList/Font"]
    .Font.Size = hSkinTheme["AlbumNameList/FontSize"]
    .Font.Bold = False
    .Foreground = CInt(hSkinTheme["AlbumNameList/Foreground"])
    .Wrap = True
    .Alignment = Align.Center
    .Padding = 3
  End With
  
  'Panel para organizar la lista de canciones
  With CSongList
    .X = hSkinTheme["SongList/X"]
    .Y = hSkinTheme["SongList/Y"]
    .H = hSkinTheme["SongList/H"]
    .W = hSkinTheme["SongList/W"]
  End With
  
  $H = CInt(CSongList.H / 10)
  $W = CInt(CSongList.W / 3)
  
  'Ajustar lista de canciones
  For p = 0 To CSongList.W - $W Step $W
    For i = 0 To 9
      With SongList[c]
        .H = $H
        .W = $W
        .X = p
        .Y = $H * i
      End With
      Inc c
    Next
  Next
  
End

Private Sub AlbumShow()
  
  Dim hResult As Result, i As Byte
  
  'Si llega al final de los albumnes hace el calculo de cuanto mostrar.
  For i = 0 To 9
    If sAlbums.Length > i Then
      hResult = DataControl.getDataAlbum(sAlbums[i])
      With CoverAlbum[i]
          If hResult["Cover_name"] = "0" Then
            .cover = CoverDefault
          Else
            .Cover = DataControl.getWorkDir() &/ hResult["Genero"] &/ hResult["Album"] &/ hResult["Cover_name"]
          Endif
          .Title = hResult["Album"]
          .Songs = hResult["Total_songs"]
          .Number = Draw_Zeros(sAlbums[i])
      End With
    Else
       With CoverAlbum[i]
          .cover = "./resource/null.png"
          .Title = ""
          .Songs = "0"
          .Number = ""
       End With
    Endif
  Next
  
End

Private Function NumberPos_Read() As Integer[]

  Return sAlbums

End

Private Sub NumberPos_Write(Value As Integer[])

  Dim i As Byte
  sAlbums.Clear
  'Vaciar la caché de imagenes
  For i = 0 To 9
    CoverAlbum[i].ImgClear
    If Value.Length > i Then
      sAlbums.Add(Value[i])
    Endif
  Next
  AlbumShow

End

Public Sub PlayAllSongs_MouseDown()
  
  InfoBox.MessageType(2)
  InfoBox.Show
  
End

Private Sub PlayAll()
  
  Dim sSong As New Song, hResult, $hResult As Result, TotalSongs, SongID, s, i, idPos, jmpPos As Integer
  
  hResult = DataControl.getDataAlbum(idAlbum)
  TotalSongs = hResult["Total_songs"]
  FMain.$decCredito(TotalSongs)
  With sSong
    .album = hResult["Album"]
    .genere = hResult["Genero"]
    .type = DataControl.Skm_Modo
    .cover = hResult["Cover_name"]
  End With
  Print "Añadiendo a la lista"
  For s = 1 To TotalSongs
    idPos = s
    For i = 1 To 4
      Select idPos
        Case jmpPos + 1 To i * 25
          SongID = hResult["Songsid" & i]
          jmpPos = (i * 25) - 25
          Break
      End Select
    Next
    
    $hResult = DataControl.getDataSongs(SongID)
    With sSong
      .id = $hResult["id"]
      .idsong = idPos - jmpPos
      .name = $hResult["N" & sSong.idsong]
    End With
    Playlist.addPlay(sSong)
    Print "id= " & sSong.idsong & " --- " & sSong.name
    Wait 0.3
  Next
  DataControl.setPlayHistory(idAlbum)
  ResetResMovie
  InfoBox.Hide
  
End

Public Sub BackImage_MouseDown()
  
  ResetResMovie
  InfoBox.Hide
  
End

Private Sub HideAlbums()
  
  Dim i As Byte
  'Ocultar las portadas de los albumnes.
  For i = 0 To 9
    CoverAlbum[i].Visible = False
  Next
  'Ocultar los navegadores
  For i = 0 To 1
    Navigators[i].Visible = False
  Next
  'Ocultar la lista de paginas
  PageList.Hide
  'Ocultar etiqueta de Generos
  GenreLabel.Hide
  'Ocultar botones
  SearchBttn.Hide
  ChangeBttn.Hide
  GenreBttn.Hide
  NavKbd.Hide
  
End

Private Sub ShowAlbums()
  
  Dim i As Byte
  
  ShowBackground("Background")
  
  'Mostrar los albumnes
  For i = 0 To 9
    CoverAlbum[i].Visible = True
  Next
  'Mostrar los navegadores
  For i = 0 To 1
    Navigators[i].Visible = True
  Next
  'Mostrar la lista de paginas
  PageList.Show
  'Mostrar etiqueta de Generos
  GenreLabel.Show
  'Mostrar botones
  SearchBttn.Show
  ChangeBttn.Show
  GenreBttn.Show
  NavKbd.Show
  
End

Public Sub Cover_Click()
  
  ShowSelectAlbum
  ResetResMovie
  
End

Public Sub Song_MouseDown()
  
  Dim hResult As Result, SongID, i, idPos, jmpPos As Integer
  
  If DataControl.Credito = 0 Then 
    InfoBox.MessageType("3")
    InfoBox.Show
    Return
  Endif
  
  hResult = DataControl.getDataAlbum(idAlbum)
  sSong = New Song
  With sSong
    .album = hResult["Album"]
    .genere = hResult["Genero"]
    .type = DataControl.Skm_Modo
    .cover = hResult["Cover_name"]
  End With
  
  idPos = CInt(Right$(Left$(Last.Text, 3), 2))
  For i = 1 To 4
    Select idPos
      Case jmpPos + 1 To i * 25
        SongID = hResult["Songsid" & i]
        jmpPos = (i * 25) - 25
        Break
    End Select
  Next
  
  hResult = DataControl.getDataSongs(SongID)
  With sSong
    .id = hResult["id"]
    .idsong = idPos - jmpPos
    .name = hResult["N" & sSong.idsong]
  End With
  
  InfoBox.MessageType("1")
  InfoBox.Show
  
End

Private Sub PlaySelectSong()
  
  Playlist.addPlay(sSong)
  DataControl.setPlayHistory(idAlbum)
  FMain.$decCredito(1)
  ResetResMovie
  
End

Public Sub InfoBox_SelectGenre(Value As String)
  
  InfoBox.Hide
  GenreLabel.Text = Value
  If Value = "Todos" Then Value = "*"
  Genre = Value
  
  Raise ReloadAlbums
  
End

Public Sub InfoBox_PlayClick()
  
  InfoBox.Hide
  PlaySelectSong
  
End

Public Sub InfoBox_PlayAllClick()
  
  InfoBox.Hide
  PlayAll
  
End

Public Sub InfoBox_CancelClick()
  
  InfoBox.Hide
  
End

Public Sub InfoBox_CloseBox()
  
  InfoBox.Hide
  
End

Public Sub CancelSong()
  
  Playlist.CancelSong
  
End

Private Sub ShowSelectAlbum()
  
  Dim i, ViewList As Short
  Dim SongID As Integer
  If Last.Number = "" Then Return
  idAlbum = Last.Number
  ShowBackground("BGSelect")
  
  HideAlbums
  
  'Rellena la lista
  $hResult = DataControl.getDataAlbum(idAlbum)
  TotalSongs = $hResult["Total_songs"]
  SelectAlbum = $hResult["Album"]
  SelectGenre = $hResult["Genero"]
  SongID = $hResult["Songsid1"]
  If $hResult["Cover_name"] = "0" Then 
    CoverList.Cover = CoverDefault
  Else
    CoverList.Cover = DataControl.getWorkDir() &/ SelectGenre &/ SelectAlbum &/ $hResult["Cover_name"]
  Endif
  $hResult = DataControl.getDataSongs(SongID)
  
  With AlbumNameList
    .Text = SelectAlbum
    .Visible = True
  End With
  
  If TotalSongs > 30 Then
    ViewList = 30
  Else
    ViewList = TotalSongs
  Endif
  
  For i = 1 To ViewList
    If i < 10 Then
      SongList[i - 1].Text = "[0" & i & "] " & Left$($hResult["N" & i], -4)
    Else If i < 26 Then
      SongList[i - 1].Text = "[" & i & "] " & Left$($hResult["N" & i], -4)
    Else If i > 25 Then
      $hResult = DataControl.getDataSongs(SongID + 1)
      SongList[i - 1].Text = "[" & i & "] " & Left$($hResult["N" & (i - 25)], -4)
    Endif
    SongList[i - 1].Visible = True
  Next
  
  CoverList.Visible = True
  
  If ViewList > 0 Then
    If DataControl.Credito >= TotalSongs Then
    PlayAllSongs.Show
    Endif
  Endif
   
  CSongList.Show
  Navigators[2].Show
  
End

Private Sub HideSelectAlbum()
  
  Dim i As Short
  
  'Ocultar la lista
  For i = 0 To 29
    SongList[i].Visible = False
  Next
  CoverList.Visible = False
  PlayAllSongs.Hide
  AlbumNameList.Visible = False
  ' ScrollList.Visible = False
  CSongList.Hide
  Navigators[2].Hide
  
End

Private Sub ShowBackground(type As String)
  
  Dim bgimage As String
  
  bgimage = hSkinTheme["Images/" & type]
  BackImage.Picture = Picture[hSkinPath &/ bgimage]

End

Private Sub Draw_Zeros(AlbumPos As Integer) As String
  
 Dim sString As String, $TotalAlbum, $AlbumPos, i As Integer
  '////////////// Acomodar ceros /////////////////
  $TotalAlbum = Len(CStr(TotalAlbums))
  $AlbumPos = Len(CStr(AlbumPos))
  
  For i = 1 To $TotalAlbum - $AlbumPos
    sString = "0" & sString
  Next
  sString = sString & AlbumPos
  
  Return sString
  
End

Private Function Skm_Modo_Read() As String

  Return DataControl.Skm_Modo

End

Private Sub Skm_Modo_Write(Value As String)

  DataControl.Skm_Modo = Value
  TotalAlbums = DataControl.getTotalAlbums(Genre)

End

Public Sub Navigator_PulseKey()
  
  Select Last.$idKey
    Case "Nav0"
      'Left
      Raise BackwardKey
    Case "Nav1"
      'Right
      Raise ForwardKey
    Case "Nav2"
      ShowBackground("Background")
      ShowAlbums
      HideSelectAlbum
  End Select
  ResetResMovie
  InfoBox.Hide
  
End

Private Sub ResetResMovie()
  
  'Poner a cero el contador de visibilidad para el MovieBox
  Playlist.ResetResMovie
  
End

Private Sub ShowPanelSearch()
  
  HideAlbums
  HideSelectAlbum
  ShowBackground("BGSearch")
  SearchBox.Visible = True
  SearchBox.ShowSearch
  
End

Private Sub HidePanelSearch()
  
  ShowAlbums
  SearchBox.Visible = False
  SearchBox.HideSearch
  
End

Public Sub PanelSearchRaise()
  
  With SearchBox
    Select .Visible
      Case True
        HidePanelSearch
        VolMinusBttn.Show
        VolPlusBttn.Show
        Playlist.MatrizShow = True
      Case False
        ShowPanelSearch
        VolMinusBttn.Hide
        VolPlusBttn.Hide
        Playlist.MatrizShow = False
    End Select
  End With
  Debug
End

Public Sub SearchBox_ReturnMain()
  
  PanelSearchRaise
  InfoBox.Hide
  
End

Public Sub SetLblCredito(Value As Integer)
  
  CreditLbl.Text = Value
  If CoverList.Visible = True Then
    If TotalSongs >= Value Then
      PlayAllSongs.Visible = False
    Else
      PlayAllSongs.Visible = True
    Endif
  Endif
  
End

Public Sub SearchBttn_PulseKey()
  
  FMain.ViewPanelSearch
  
End

Public Sub ChangeBttn_PulseKey()

  'Restablecer el Genero
  Genre = "*"
  GenreLabel.Text = "Todos"
  
  Select ChangeBttn.$idKey
    Case "musica"
      FMain.Skm_Modo_Videos
      ChangeBttn.$idKey = "videos"
      ChangeBttn.imgResPath = hSkinPath &/ hSkinTheme["Images/VideosBttn"]
    Case "videos"
      FMain.Skm_Modo_Karaoke
      ChangeBttn.$idKey = "karaoke"
      ChangeBttn.imgResPath = hSkinPath &/ hSkinTheme["Images/KaraokeBttn"]
    Case "karaoke"
      FMain.Skm_Modo_Musica
      ChangeBttn.$idKey = "musica"
      ChangeBttn.imgResPath = hSkinPath &/ hSkinTheme["Images/MusicaBttn"]
  End Select
  
  InfoBox.Hide
  
End

Public Sub GenreBttn_PulseKey()
  
  InfoBox.loadList(DataControl.Skm_Modo)
  InfoBox.MessageType("4")
  InfoBox.Show
  
End

Public Sub VolMinusBttn_PulseKey()
  
  Raise VolMinus
  
End

Public Sub VolPlusBttn_PulseKey()
  
  Raise VolPlus
  
End

Private Function $Genre_Read() As String

  Return Genre

End

Private Sub $Genre_Write(Value As String)

  Genre = Value

End

Private Function PageNum_Read() As Integer

  Return 0

End

Private Sub PageNum_Write(Value As Integer)

  Dim PageText As String, i, b, TotalPages As Integer
  
  b = DataControl.getTotalAlbums(Genre) - 1
  If b < 0 Then b = 0
  
  i = Len(Str(b))
  If i > 1 Then
    If Right(Str(b)) = "0" Then
      TotalPages = CInt(Left(Str(b), i - 1))
    Else
      TotalPages = CInt(Left(Str(b), i - 1)) + 1
    Endif
  Else
     TotalPages = 1
  Endif
  
  If b > 0 Then
    PageText = Value & " de " & TotalPages
  Else
    PageText = "Sin páginas"
  Endif
  
  PageList.Text = PageText

End

Public Sub NavKbd_PulseKey(Value As String)
  
  InfoBox.Hide
  Raise NavJump(Value)
  
End

